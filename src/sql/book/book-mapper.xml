<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>일반게시판 관련 쿼리문들</comment>

	<entry key="increaseReviewCount">
	UPDATE BOOK
	SET REVIEW_COUNT = REVIEW_COUNT + 1
	WHERE BOOK_NO = ?
	</entry>
	
	<entry key="selectBook">
	    SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME, BOOK_INTRO, BOOK_SUMMARY, NVL(AVG(REVIEW_SCOPE), 0) "SCOPE"
		FROM BOOK B 
		JOIN GNERE G ON B.GNERE_NO = G.GNERE_NO
	    LEFT JOIN REVIEW ON (BOOK_NO = REVIEW_BOOK)
	    GROUP BY BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME, BOOK_INTRO, BOOK_SUMMARY
		HAVING BOOK_NO = ?
   </entry>
	
	<entry key = "selectReviewS">
	
	SELECT ROWNUM,USER_ID, REVIEW_CONTENT, REVIEW_SCOPE, REVIEW_DATE, COUNT, REVIEW_TITLE, REVIEW_NO
	FROM ( SELECT USER_ID, REVIEW_CONTENT, REVIEW_SCOPE, REVIEW_DATE, R.COUNT, REVIEW_TITLE, REVIEW_NO
         FROM BOOK B 
         RIGHT JOIN REVIEW R ON B.BOOK_NO = R.REVIEW_BOOK
         RIGHT JOIN MEMBER M ON R.REVIEW_WRITER = M.USER_NO
         WHERE R.STATUS = 'Y' AND B.BOOK_NO = ?
         ORDER BY REVIEW_SCOPE DESC)
	WHERE ROWNUM BETWEEN 1 AND 3
	
	</entry>
	
	<entry key = "selectCategory">
	
	SELECT BOOK_NO, GNERE_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER,
	    GNERE_NAME, BOOK_INTRO, BOOK_SUMMARY, NVL(AVG(REVIEW_SCOPE), 0) "SCOPE"
	FROM BOOK
	LEFT JOIN GNERE USING (GNERE_NO)
	LEFT JOIN REVIEW ON (BOOK_NO = REVIEW_BOOK)
	GROUP BY BOOK_NO, GNERE_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, 
	GNERE_NAME, BOOK_INTRO, BOOK_SUMMARY
	HAVING GNERE_NO = ?
	ORDER BY BOOK_NO DESC
	
	</entry>
	
	<entry key="selectCheckWish">
	
	SELECT USER_NO, BOOK_NO, STATUS  
	FROM WISHLIST  
	WHERE BOOK_NO = ?  
	  AND USER_NO = ?
	  
	</entry>
	
	<entry key="insertWish">
		INSERT INTO WISHLIST VALUES (?, ?, 'Y')
	</entry>
	
	<entry key="updateNWish">
      UPDATE WISHLIST SET STATUS = 'N'
      WHERE USER_NO = ?
       AND BOOK_NO = ?
       AND STATUS = 'Y'
	</entry>
	
	<entry key="updateYWish">
      UPDATE WISHLIST SET STATUS = 'Y'
      WHERE USER_NO = ?
       AND BOOK_NO = ?
       AND STATUS = 'N'
	</entry>
	
		<entry key = "mainScope">
	
	SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO, SCOPE
   FROM (SELECT A.* ,ROWNUM RNUM
   FROM (SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO, NVL(AVG(REVIEW_SCOPE), 0) "SCOPE"
   FROM BOOK
   LEFT JOIN REVIEW ON (BOOK_NO = REVIEW_BOOK)
   GROUP BY BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO
   ORDER BY SCOPE DESC) A)
    WHERE RNUM = ?
	
	</entry>
	
	<entry key="mainBestSeller">
		SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO, SCOPE
   FROM (SELECT A.* ,ROWNUM RNUM
   FROM (SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO, NVL(AVG(REVIEW_SCOPE), 0) "SCOPE"
   FROM BOOK
   LEFT JOIN REVIEW ON (BOOK_NO = REVIEW_BOOK)
   GROUP BY BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO,REVIEW_COUNT
   ORDER BY REVIEW_COUNT DESC) A)
   WHERE RNUM = ?
	</entry>
	
	
	<entry key = "selectSearchBook">
	
	SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME,BOOK_INTRO, SCOPE
		FROM (
			SELECT ROWNUM RNUM, A.* 
			FROM(
    			SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME,BOOK_INTRO, NVL(AVG(REVIEW_SCOPE), 0) "SCOPE"
    			FROM BOOK B
                LEFT JOIN REVIEW ON (BOOK_NO = REVIEW_BOOK)
    			LEFT JOIN GNERE G ON B.GNERE_NO = G.GNERE_NO
                GROUP BY BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO,GNERE_NAME
    			HAVING BOOK_TITLE LIKE ?
    			ORDER 
        			BY BOOK_NO DESC) A)
 		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key = "selectListCount">
	
	SELECT COUNT(*) COUNT
  	FROM BOOK
  	WHERE BOOK_TITLE LIKE ?
  	
  	
	</entry>
	
	<entry key = "searchAuthor">
		SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME,BOOK_INTRO, SCOPE
		FROM (
			SELECT ROWNUM RNUM, A.* 
			FROM(
    			SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME,BOOK_INTRO, NVL(AVG(REVIEW_SCOPE), 0) "SCOPE"
    			FROM BOOK B
                LEFT JOIN REVIEW ON (BOOK_NO = REVIEW_BOOK)
    			LEFT JOIN GNERE G ON B.GNERE_NO = G.GNERE_NO
                GROUP BY BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO,GNERE_NAME
    			HAVING BOOK_AUTHOR LIKE ?
    			ORDER 
        			BY BOOK_NO DESC) A)
	</entry>
	
	
	<entry key = "searchBookTitle">
	
	SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME,BOOK_INTRO, SCOPE
		FROM (
			SELECT ROWNUM RNUM, A.* 
			FROM(
    			SELECT BOOK_NO, BOOK_TITLE, BOOK_AUTHOR,BOOK_PUBLISHER,GNERE_NAME,BOOK_INTRO, NVL(AVG(REVIEW_SCOPE), 0) "SCOPE"
    			FROM BOOK B
                LEFT JOIN REVIEW ON (BOOK_NO = REVIEW_BOOK)
    			LEFT JOIN GNERE G ON B.GNERE_NO = G.GNERE_NO
                GROUP BY BOOK_NO, BOOK_TITLE, BOOK_AUTHOR, BOOK_PUBLISHER, BOOK_INTRO,GNERE_NAME
    			HAVING BOOK_TITLE LIKE ?
    			ORDER 
        			BY BOOK_NO DESC) A)
 		WHERE RNUM BETWEEN 1 AND 6
	</entry>
	
</properties>